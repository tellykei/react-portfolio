{"ast":null,"code":"var _jsxFileName = \"e:\\\\Users\\\\taliy\\\\Documents\\\\School pro\\\\web\\\\individual-project\\\\client\\\\src\\\\Pages\\\\FeedbackPage.js\";\nimport React from 'react';\nimport Axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nclass FeedbackPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      messagesarr: [],\n      name: '',\n      usermessage: '',\n      loggedin: false\n    };\n    this.loadmessages = this.loadmessages.bind(this);\n    this.handleUserMessageChange = this.handleUserMessageChange.bind(this);\n    this.handleUserNameChange = this.handleUserNameChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    fetch('/api/sessions').then(response => {\n      if (response.status == 200) {\n        this.setState({\n          loggedin: true\n        });\n      }\n    });\n    await this.loadmessages();\n  }\n\n  async loadmessages() {\n    try {\n      const response = await Axios.get('/api/messages');\n      const data = response.data;\n      this.setState({\n        messagesarr: data\n      });\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  handleUserNameChange(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  handleUserMessageChange(event) {\n    this.setState({\n      usermessage: event.target.value\n    });\n  }\n\n  async handleSubmit(e) {\n    const _this$state = this.state,\n          name = _this$state.name,\n          usermessage = _this$state.usermessage;\n\n    try {\n      const data = {\n        name: name,\n        messages: usermessage\n      };\n      await Axios.post('/api/messages', data);\n    } catch (error) {\n      console.error(error.message);\n    }\n\n    await this.loadmessages();\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          messagesarr = _this$state2.messagesarr,\n          name = _this$state2.name,\n          usermessage = _this$state2.usermessage,\n          loggedin = _this$state2.loggedin; // For each user in the database, create a card\n\n    const messagecard = messagesarr.map(message => {\n      return React.createElement(Card, {\n        style: {\n          margin: '1rem'\n        },\n        key: JSON.stringify(message),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, message.name), React.createElement(Typography, {\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, message.messages)));\n    });\n\n    if (loggedin == true) {\n      return React.createElement(\"div\", {\n        style: {\n          marginTop: '2rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Feedback\"), React.createElement(\"form\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: 'Name',\n        value: name,\n        variant: \"outlined\",\n        onChange: this.handleUserNameChange,\n        align: \"center\",\n        style: {\n          margin: '1rem',\n          width: '20rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: 'message',\n        value: usermessage,\n        variant: \"outlined\",\n        multiline: true,\n        rows: \"3\",\n        onChange: this.handleUserMessageChange,\n        style: {\n          margin: '1rem',\n          width: '25rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          margin: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleUserSubmit,\n        variant: 'contained',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(Typography, {\n        color: \"textSecondary\",\n        variant: 'h4',\n        style: {\n          padding: '1rem'\n        },\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Messages\"), messagecard);\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"not logged in\");\n    }\n  }\n\n}\n\nexport default FeedbackPage;","map":{"version":3,"sources":["e:/Users/taliy/Documents/School pro/web/individual-project/client/src/Pages/FeedbackPage.js"],"names":["React","Axios","TextField","Button","Card","CardContent","Typography","FeedbackPage","Component","constructor","state","messagesarr","name","usermessage","loggedin","loadmessages","bind","handleUserMessageChange","handleUserNameChange","handleSubmit","componentDidMount","fetch","then","response","status","setState","get","data","error","console","message","event","target","value","e","messages","post","render","messagecard","map","margin","JSON","stringify","marginTop","width","handleUserSubmit","padding"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AACA,MAAMC,YAAN,SAA2BP,KAAK,CAACQ,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,WAAW,EAAC,EAHH;AAITC,MAAAA,QAAQ,EAAE;AAJD,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BD,IAA7B,CAAkC,IAAlC,CAA/B;AACA,SAAKE,oBAAL,GAA0B,KAAKA,oBAAL,CAA0BF,IAA1B,CAA+B,IAA/B,CAA1B;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AACD,QAAMI,iBAAN,GAAyB;AAErBC,IAAAA,KAAK,CAAC,eAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AAC1B,aAAKC,QAAL,CAAc;AAAEX,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AAEH;AAEA,KAPD;AAQA,UAAM,KAAKC,YAAL,EAAN;AACH;;AAED,QAAMA,YAAN,GAAqB;AACjB,QAAI;AACA,YAAMQ,QAAQ,GAAG,MAAMtB,KAAK,CAACyB,GAAN,CAAU,eAAV,CAAvB;AADA,YAEQC,IAFR,GAEiBJ,QAFjB,CAEQI,IAFR;AAGA,WAAKF,QAAL,CAAc;AAAEd,QAAAA,WAAW,EAAEgB;AAAf,OAAd;AAEH,KALD,CAKE,OAAOC,KAAP,EAAc;AAEZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,OAApB;AACH;AACJ;;AAEDZ,EAAAA,oBAAoB,CAACa,KAAD,EAAO;AACvB,SAAKN,QAAL,CAAc;AAACb,MAAAA,IAAI,EAACmB,KAAK,CAACC,MAAN,CAAaC;AAAnB,KAAd;AACH;;AACDhB,EAAAA,uBAAuB,CAACc,KAAD,EAAO;AAC1B,SAAKN,QAAL,CAAc;AAACZ,MAAAA,WAAW,EAAEkB,KAAK,CAACC,MAAN,CAAaC;AAA3B,KAAd;AACH;;AAEH,QAAMd,YAAN,CAAmBe,CAAnB,EAAsB;AAAA,wBACc,KAAKxB,KADnB;AAAA,UACRE,IADQ,eACRA,IADQ;AAAA,UACFC,WADE,eACFA,WADE;;AAEhB,QAAI;AAEA,YAAMc,IAAI,GAAG;AAAEf,QAAAA,IAAI,EAAEA,IAAR;AAAcuB,QAAAA,QAAQ,EAAEtB;AAAxB,OAAb;AAEE,YAAMZ,KAAK,CAACmC,IAAN,CAAW,eAAX,EAA4BT,IAA5B,CAAN;AAEL,KAND,CAME,OAAOC,KAAP,EAAc;AAEZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,OAApB;AACH;;AAED,UAAM,KAAKf,YAAL,EAAN;AACH;;AAEDsB,EAAAA,MAAM,GAAE;AAAA,yBAEgD,KAAK3B,KAFrD;AAAA,UAEIC,WAFJ,gBAEIA,WAFJ;AAAA,UAEiBC,IAFjB,gBAEiBA,IAFjB;AAAA,UAEuBC,WAFvB,gBAEuBA,WAFvB;AAAA,UAEoCC,QAFpC,gBAEoCA,QAFpC,EAIJ;;AACA,UAAMwB,WAAW,GAAG3B,WAAW,CAAC4B,GAAZ,CAAiBT,OAAD,IAAa;AAE7C,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEU,UAAAA,MAAM,EAAE;AAAV,SAAb;AAAiC,QAAA,GAAG,EAAEC,IAAI,CAACC,SAAL,CAAeZ,OAAf,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMA,OAAO,CAAClB,IADd,CADJ,EAKI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMkB,OAAO,CAACK,QADd,CALJ,CADJ,CADJ;AAaH,KAfmB,CAApB;;AAgBA,QAAGrB,QAAQ,IAAG,IAAd,EAAmB;AACnB,aACI;AAAK,QAAA,KAAK,EAAE;AAAE6B,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,IAAtB;AAA2B,QAAA,OAAO,EAAC,IAAnC;AAAwC,QAAA,KAAK,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAII;AAAM,QAAA,KAAK,EAAG,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AACI,QAAA,KAAK,EAAE,MADX;AAEI,QAAA,KAAK,EAAE/B,IAFX;AAGI,QAAA,OAAO,EAAC,UAHZ;AAII,QAAA,QAAQ,EAAE,KAAKM,oBAJnB;AAKI,QAAA,KAAK,EAAE,QALX;AAMI,QAAA,KAAK,EAAE;AAAEsB,UAAAA,MAAM,EAAE,MAAV;AAAkBI,UAAAA,KAAK,EAAE;AAAzB,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADA,EAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AACI,QAAA,KAAK,EAAE,SADX;AAEI,QAAA,KAAK,EAAE/B,WAFX;AAGI,QAAA,OAAO,EAAG,UAHd;AAII,QAAA,SAAS,MAJb;AAKI,QAAA,IAAI,EAAG,GALX;AAMI,QAAA,QAAQ,EAAE,KAAKI,uBANnB;AAOI,QAAA,KAAK,EAAE;AAAEuB,UAAAA,MAAM,EAAE,MAAV;AAAkBI,UAAAA,KAAK,EAAE;AAAzB,SAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAXA,EAsBA;AAAK,QAAA,KAAK,EAAE;AAAEJ,UAAAA,MAAM,EAAE;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAE,KAAKK,gBADlB;AAEI,QAAA,OAAO,EAAE,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAtBA,CAJJ,EAmCI,oBAAC,UAAD;AACI,QAAA,KAAK,EAAE,eADX;AAEI,QAAA,OAAO,EAAE,IAFb;AAGI,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAHX;AAII,QAAA,KAAK,EAAG,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnCJ,EA2CMR,WA3CN,CADJ;AA+CC,KAhDD,MAiDA;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ;AAKH;AACA;;AA3IsC;;AA6I3C,eAAe/B,YAAf","sourcesContent":["import React from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nclass FeedbackPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            messagesarr: [],\r\n            name: '',\r\n            usermessage:'',\r\n            loggedin: false\r\n        }\r\n        this.loadmessages = this.loadmessages.bind(this);\r\n        this.handleUserMessageChange = this.handleUserMessageChange.bind(this);\r\n        this.handleUserNameChange=this.handleUserNameChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    async componentDidMount(){\r\n        \r\n        fetch('/api/sessions')\r\n        .then(response => {\r\n          if (response.status == 200) {\r\n            this.setState({ loggedin: true });\r\n            \r\n        }\r\n        \r\n        });\r\n        await this.loadmessages()\r\n    }\r\n\r\n    async loadmessages() {\r\n        try {\r\n            const response = await Axios.get('/api/messages');\r\n            const { data } = response;\r\n            this.setState({ messagesarr: data });\r\n\r\n        } catch (error) {\r\n\r\n            console.error(error.message);\r\n        }\r\n    }\r\n\r\n    handleUserNameChange(event){\r\n        this.setState({name:event.target.value});\r\n    }\r\n    handleUserMessageChange(event){\r\n        this.setState({usermessage: event.target.value});\r\n    }\r\n\r\n  async handleSubmit(e) {\r\n        const { name, usermessage } = this.state;\r\n        try {\r\n\r\n            const data = { name: name, messages: usermessage };\r\n\r\n              await Axios.post('/api/messages', data);\r\n\r\n        } catch (error) {\r\n\r\n            console.error(error.message);\r\n        }\r\n\r\n        await this.loadmessages();\r\n    }\r\n\r\n    render(){\r\n        \r\n        const { messagesarr, name, usermessage, loggedin} = this.state;\r\n\r\n        // For each user in the database, create a card\r\n        const messagecard = messagesarr.map((message) => {\r\n\r\n            return (\r\n                <Card style={{ margin: '1rem' }} key={JSON.stringify(message)}>\r\n                    <CardContent>\r\n                        <Typography color={\"textSecondary\"}>\r\n                            { message.name }\r\n                        </Typography>\r\n                        \r\n                        <Typography color={\"textSecondary\"}>\r\n                            { message.messages }\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            )\r\n        });\r\n        if(loggedin ==true){\r\n        return (\r\n            <div style={{ marginTop: '2rem' }} >\r\n            <Typography component=\"h1\" variant=\"h5\" align='center'>\r\n              Feedback\r\n            </Typography >\r\n                <form align = 'center'>\r\n                <div>\r\n                <TextField \r\n                    label={'Name'}\r\n                    value={name}\r\n                    variant=\"outlined\"\r\n                    onChange={this.handleUserNameChange}\r\n                    align= 'center'\r\n                    style={{ margin: '1rem' ,width: '20rem',  }}\r\n                />\r\n                </div>\r\n                <div>\r\n                <TextField \r\n                    label={'message'}\r\n                    value={usermessage}\r\n                    variant = \"outlined\"\r\n                    multiline\r\n                    rows = '3'\r\n                    onChange={this.handleUserMessageChange}\r\n                    style={{ margin: '1rem', width: '25rem'}}\r\n                />\r\n                </div>\r\n                <div style={{ margin: '1rem' }}>\r\n                    <Button \r\n                        onClick={this.handleUserSubmit} \r\n                        variant={'contained'}>\r\n\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n                </form>\r\n                <Typography \r\n                    color={\"textSecondary\"} \r\n                    variant={'h4'}\r\n                    style={{ padding: '1rem' }}\r\n                    align = \"center\">\r\n\r\n                    Messages\r\n                </Typography>\r\n                { messagecard }\r\n            </div>\r\n        );\r\n        }\r\n    else{\r\n        return(\r\n            <div>\r\n                not logged in\r\n            </div>\r\n        );\r\n    }\r\n    }\r\n}\r\nexport default FeedbackPage;"]},"metadata":{},"sourceType":"module"}