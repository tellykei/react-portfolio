{"ast":null,"code":"var _jsxFileName = \"E:\\\\Users\\\\taliy\\\\Documents\\\\School pro\\\\web\\\\individual-project\\\\client\\\\src\\\\Pages\\\\SignUp.js\";\nimport React from 'react';\nimport Axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      username: '',\n      userEmailAddress: '',\n      userPassword: ''\n    };\n    this.loadUsers = this.loadUsers.bind(this);\n    this.handleUserEmailAddressChange = this.handleUserEmailAddressChange.bind(this);\n    this.handleUserNameChange = this.handleUserNameChange.bind(this);\n    this.handleUserPasswordChange = this.handleUserPasswordChange.bind(this);\n    this.handleUserSubmit = this.handleUserSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.loadUsers();\n  }\n\n  async loadUsers() {\n    try {\n      const response = await Axios.get('/api/users');\n      const data = response.data;\n      this.setState({\n        users: data\n      });\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  handleUserNameChange(event) {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  handleUserEmailAddressChange(event) {\n    this.setState({\n      userEmailAddress: event.target.value\n    });\n  }\n\n  handleUserPasswordChange(event) {\n    this.setState({\n      userPassword: event.target.value\n    });\n  }\n\n  async handleUserSubmit() {\n    const _this$state = this.state,\n          username = _this$state.username,\n          userEmailAddress = _this$state.userEmailAddress,\n          userPassword = _this$state.userPassword;\n\n    try {\n      // This is the JSON payload that will be delivered to the server in 'request.body'\n      const data = {\n        name: username,\n        emailAddress: userEmailAddress,\n        password: userPassword\n      }; // We are now doing a POST request because we are storing a new user\n\n      await Axios.post('/api/users', data);\n    } catch (error) {\n      console.error(error.message);\n    } // Reload the users straight from the server\n\n\n    await this.loadUsers();\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          users = _this$state2.users,\n          userName = _this$state2.userName,\n          userEmailAddress = _this$state2.userEmailAddress,\n          user = _this$state2.user; // For each user in the database, create a card\n\n    const userCards = users.map(user => {\n      return React.createElement(Card, {\n        style: {\n          margin: '1rem'\n        },\n        key: JSON.stringify(user),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, user.name), React.createElement(Typography, {\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, user.emailAddress)));\n    });\n    return React.createElement(\"div\", {\n      style: {\n        margin: '1rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: 'Name',\n      value: userName,\n      onChange: this.handleUserNameChange,\n      style: {\n        margin: '1rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      label: 'Email Address',\n      value: userEmailAddress,\n      onChange: this.handleUserEmailAddressChange,\n      style: {\n        margin: '1rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      label: 'Password',\n      value: userPassword,\n      onChange: this.handleUserPasswordChange,\n      style: {\n        margin: '1rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        margin: '1rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleUserSubmit,\n      variant: 'contained',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(Typography, {\n      color: \"textSecondary\",\n      variant: 'h4',\n      style: {\n        padding: '1rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Users\"), userCards);\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["E:/Users/taliy/Documents/School pro/web/individual-project/client/src/Pages/SignUp.js"],"names":["React","Axios","TextField","Button","Card","CardContent","Typography","SignUp","Component","constructor","props","state","users","username","userEmailAddress","userPassword","loadUsers","bind","handleUserEmailAddressChange","handleUserNameChange","handleUserPasswordChange","handleUserSubmit","componentDidMount","response","get","data","setState","error","console","message","event","target","value","name","emailAddress","password","post","render","userName","user","userCards","map","margin","JSON","stringify","padding"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nclass SignUp extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            users: [],\r\n            username: '',\r\n            userEmailAddress: '',\r\n            userPassword:''\r\n        };\r\n        this.loadUsers = this.loadUsers.bind(this);\r\n        this.handleUserEmailAddressChange = this.handleUserEmailAddressChange.bind(this);\r\n        this.handleUserNameChange=this.handleUserNameChange.bind(this);\r\n        this.handleUserPasswordChange = this.handleUserPasswordChange.bind(this);\r\n        this.handleUserSubmit = this.handleUserSubmit.bind(this);\r\n    }\r\n    async componentDidMount(){\r\n        await this.loadUsers()\r\n    }\r\n    async loadUsers() {\r\n\r\n        try {\r\n\r\n            const response = await Axios.get('/api/users');\r\n\r\n            const { data } = response;\r\n\r\n            this.setState({ users: data });\r\n\r\n        } catch (error) {\r\n\r\n            console.error(error.message);\r\n        }\r\n    }\r\n    handleUserNameChange(event){\r\n        this.setState({username:event.target.value});\r\n    }\r\n    handleUserEmailAddressChange(event){\r\n        this.setState({userEmailAddress: event.target.value});\r\n    }\r\n    handleUserPasswordChange(event){\r\n        this.setState({userPassword: event.target.value});\r\n    }\r\n    async handleUserSubmit() {\r\n\r\n        const { username, userEmailAddress, userPassword } = this.state;\r\n\r\n        try {\r\n\r\n            // This is the JSON payload that will be delivered to the server in 'request.body'\r\n            const data = { name: username, emailAddress: userEmailAddress, password: userPassword };\r\n\r\n            // We are now doing a POST request because we are storing a new user\r\n            await Axios.post('/api/users', data);\r\n\r\n        } catch (error) {\r\n\r\n            console.error(error.message);\r\n        }\r\n\r\n        // Reload the users straight from the server\r\n        await this.loadUsers();\r\n    }\r\n    render() {\r\n\r\n        const { users, userName, userEmailAddress, user } = this.state;\r\n\r\n        // For each user in the database, create a card\r\n        const userCards = users.map((user) => {\r\n\r\n            return (\r\n                <Card style={{ margin: '1rem' }} key={JSON.stringify(user)}>\r\n                    <CardContent>\r\n                        <Typography color={\"textSecondary\"}>\r\n                            { user.name }\r\n                        </Typography>\r\n                        \r\n                        <Typography color={\"textSecondary\"}>\r\n                            { user.emailAddress }\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            )\r\n        });\r\n\r\n        return (\r\n\r\n            <div style={{ margin: '1rem' }}>\r\n\r\n                <TextField \r\n                    label={'Name'}\r\n                    value={userName}\r\n                    onChange={this.handleUserNameChange}\r\n                    style={{ margin: '1rem' }}\r\n                />\r\n\r\n                <TextField \r\n                    label={'Email Address'}\r\n                    value={userEmailAddress}\r\n                    onChange={this.handleUserEmailAddressChange}\r\n                    style={{ margin: '1rem' }}\r\n                />\r\n                <TextField \r\n                    label={'Password'}\r\n                    value={userPassword}\r\n                    onChange={this.handleUserPasswordChange}\r\n                    style={{ margin: '1rem' }}\r\n                />\r\n\r\n                <div style={{ margin: '1rem' }}>\r\n                    <Button \r\n                        onClick={this.handleUserSubmit} \r\n                        variant={'contained'}>\r\n\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n\r\n                <Typography \r\n                    color={\"textSecondary\"} \r\n                    variant={'h4'}\r\n                    style={{ padding: '1rem' }}>\r\n\r\n                    Users\r\n                </Typography>\r\n\r\n                { userCards }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}