{"ast":null,"code":"var _jsxFileName = \"e:\\\\Users\\\\taliy\\\\Documents\\\\School pro\\\\web\\\\individual-project\\\\client\\\\src\\\\Pages\\\\FeedbackPage.js\";\nimport React from 'react';\nimport Axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nclass FeedbackPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      messages: [],\n      name: '',\n      message: ''\n    };\n    this.loadmessages = this.loadmessages.bind(this);\n    this.handleUserMessageChange = this.handleUserMessageChange.bind(this);\n    this.handleUserNameChange = this.handleUserNameChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.loadmessages();\n  }\n\n  async loadmessages() {\n    try {\n      const response = await Axios.get('/api/messages');\n      const data = response.data;\n      this.setState({\n        messages: data\n      });\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  handleUserNameChange(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  handleUserMessageChange(event) {\n    this.setState({\n      message: event.target.value\n    });\n  }\n\n  async handleSubmit(e) {\n    const _this$state = this.state,\n          name = _this$state.name,\n          message = _this$state.message;\n\n    try {\n      const data = {\n        name: name,\n        message: message\n      };\n      await Axios.post('/messages', data);\n    } catch (error) {\n      console.error(error.message);\n    }\n\n    await this.loadmessages();\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          messages = _this$state2.messages,\n          name = _this$state2.name,\n          message = _this$state2.message; // For each user in the database, create a card\n\n    const messagess = messages.map(messages => {\n      return React.createElement(Card, {\n        style: {\n          margin: '1rem'\n        },\n        key: JSON.stringify(message),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, message.name), React.createElement(Typography, {\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, message.message)));\n    });\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: '5rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Feedback\"), React.createElement(\"form\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: 'Name',\n      value: name,\n      variant: \"outlined\",\n      onChange: this.handleUserNameChange,\n      align: \"center\",\n      style: {\n        margin: '1rem',\n        width: '20rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: 'message',\n      value: message,\n      variant: \"outlined\",\n      multiline: true,\n      rows: \"3\",\n      onChange: this.handleUserMessageChange,\n      style: {\n        margin: '1rem',\n        width: '20rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        margin: '1rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleUserSubmit,\n      variant: 'contained',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(Typography, {\n      color: \"textSecondary\",\n      variant: 'h4',\n      style: {\n        padding: '1rem'\n      },\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Messages\"), messagess);\n  }\n\n}\n\nexport default FeedbackPage;","map":{"version":3,"sources":["e:/Users/taliy/Documents/School pro/web/individual-project/client/src/Pages/FeedbackPage.js"],"names":["React","Axios","TextField","Button","Card","CardContent","Typography","FeedbackPage","Component","constructor","state","messages","name","message","loadmessages","bind","handleUserMessageChange","handleUserNameChange","handleSubmit","componentDidMount","response","get","data","setState","error","console","event","target","value","e","post","render","messagess","map","margin","JSON","stringify","marginTop","width","handleUserSubmit","padding"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nclass FeedbackPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            messages: [],\r\n            name: '',\r\n            message:''\r\n        }\r\n        this.loadmessages = this.loadmessages.bind(this);\r\n        this.handleUserMessageChange = this.handleUserMessageChange.bind(this);\r\n        this.handleUserNameChange=this.handleUserNameChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    async componentDidMount(){\r\n        await this.loadmessages()\r\n    }\r\n\r\n    async loadmessages() {\r\n        try {\r\n            const response = await Axios.get('/api/messages');\r\n            const { data } = response;\r\n            this.setState({ messages: data });\r\n\r\n        } catch (error) {\r\n\r\n            console.error(error.message);\r\n        }\r\n    }\r\n\r\n    handleUserNameChange(event){\r\n        this.setState({name:event.target.value});\r\n    }\r\n    handleUserMessageChange(event){\r\n        this.setState({message: event.target.value});\r\n    }\r\n\r\n  async handleSubmit(e) {\r\n        const { name, message } = this.state;\r\n        try {\r\n\r\n            const data = { name: name, message: message };\r\n\r\n              await Axios.post('/messages', data);\r\n\r\n        } catch (error) {\r\n\r\n            console.error(error.message);\r\n        }\r\n\r\n        await this.loadmessages();\r\n    }\r\n\r\n    render(){\r\n        \r\n        const { messages, name, message } = this.state;\r\n\r\n        // For each user in the database, create a card\r\n        const messagess = messages.map((messages) => {\r\n\r\n            return (\r\n                <Card style={{ margin: '1rem' }} key={JSON.stringify(message)}>\r\n                    <CardContent>\r\n                        <Typography color={\"textSecondary\"}>\r\n                            { message.name }\r\n                        </Typography>\r\n                        \r\n                        <Typography color={\"textSecondary\"}>\r\n                            { message.message }\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div style={{ marginTop: '5rem' }} >\r\n            <Typography component=\"h1\" variant=\"h5\" align='center'>\r\n              Feedback\r\n            </Typography >\r\n                <form align = 'center'>\r\n                <div>\r\n                <TextField \r\n                    label={'Name'}\r\n                    value={name}\r\n                    variant=\"outlined\"\r\n                    onChange={this.handleUserNameChange}\r\n                    align= 'center'\r\n                    style={{ margin: '1rem' ,width: '20rem',  }}\r\n                />\r\n                </div>\r\n                <div>\r\n                <TextField \r\n                    label={'message'}\r\n                    value={message}\r\n                    variant = \"outlined\"\r\n                    multiline\r\n                    rows = '3'\r\n                    onChange={this.handleUserMessageChange}\r\n                    style={{ margin: '1rem', width: '20rem'}}\r\n                />\r\n                </div>\r\n                <div style={{ margin: '1rem' }}>\r\n                    <Button \r\n                        onClick={this.handleUserSubmit} \r\n                        variant={'contained'}>\r\n\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n                </form>\r\n                <Typography \r\n                    color={\"textSecondary\"} \r\n                    variant={'h4'}\r\n                    style={{ padding: '1rem' }}\r\n                    align = \"center\">\r\n\r\n                    Messages\r\n                </Typography>\r\n\r\n                { messagess }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default FeedbackPage;"]},"metadata":{},"sourceType":"module"}